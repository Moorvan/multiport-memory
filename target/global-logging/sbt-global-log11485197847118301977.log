[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\YueChen\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\YueChen\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Oracle Corporation Java 12.0.2)
[debug]       Load.loadUnit: plugins took 123.2619ms
[debug]       Load.loadUnit: defsScala took 0.6348ms
[debug] [Loading] Scanning directory C:\Users\YueChen\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\YueChen\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 45.5218 ms
[debug]           Load.resolveProject(global-plugins) took 76.0926ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\YueChen\.sbt\1.0\plugins, plugins: List(<none>))) took 159.105ms
[debug] [Loading] Done in C:\Users\YueChen\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 189.3323ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3454ms
[debug]     Load.loadUnit(file:/C:/Users/YueChen/.sbt/1.0/plugins/, ...) took 328.8648ms
[debug]   Load.apply: load took 548.4195ms
[debug]   Load.apply: resolveProjects took 7.4964ms
[debug]   Load.apply: finalTransforms took 76.9182ms
[debug]   Load.apply: config.delegates took 7.938ms
[debug]   Load.apply: Def.make(settings)... took 1266.747ms
[debug]   Load.apply: structureIndex took 103.5954ms
[debug]   Load.apply: mkStreams took 1.7138ms
[info] loading global plugins from C:\Users\YueChen\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4203.2004ms
[debug]           Load.loadUnit: plugins took 30.3952ms
[debug]           Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Documents\study\chisel-riscv\chisel-project\chisel-MultiPortMemory\project
[debug]             Load.loadUnit: mkEval took 7.6435ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Documents\study\chisel-riscv\chisel-project\chisel-MultiPortMemory\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.8472 ms
[info] loading settings for project chisel-multiportmemory-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(chisel-multiportmemory-build) took 18.1544ms
[debug]             Load.loadTransitive: finalizeProject(Project(id chisel-multiportmemory-build, base: C:\Documents\study\chisel-riscv\chisel-project\chisel-MultiPortMemory\project, plugins: List(<none>))) took 22.0592ms
[debug] [Loading] Done in C:\Documents\study\chisel-riscv\chisel-project\chisel-MultiPortMemory\project, returning: (chisel-multiportmemory-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2718.0015ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.6164ms
[debug]         Load.loadUnit(file:/C:/Documents/study/chisel-riscv/chisel-project/chisel-MultiPortMemory/project/, ...) took 2760.2724ms
[debug]       Load.apply: load took 2762.6837ms
[debug]       Load.apply: resolveProjects took 0.154ms
[debug]       Load.apply: finalTransforms took 17.4856ms
[debug]       Load.apply: config.delegates took 0.5902ms
[debug]       Load.apply: Def.make(settings)... took 155.5461ms
[debug]       Load.apply: structureIndex took 40.0386ms
[debug]       Load.apply: mkStreams took 0.0054ms
[info] loading project definition from C:\Documents\study\chisel-riscv\chisel-project\chisel-MultiPortMemory\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4533.755ms
[debug]     Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Documents\study\chisel-riscv\chisel-project\chisel-MultiPortMemory
[debug]       Load.loadUnit: mkEval took 0.3887ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.4358 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 38.5216ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Documents\study\chisel-riscv\chisel-project\chisel-MultiPortMemory, plugins: List(<none>))) took 45.477ms
[debug] [Loading] Done in C:\Documents\study\chisel-riscv\chisel-project\chisel-MultiPortMemory, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1919.9995ms
[debug]     Load.loadUnit: cleanEvalClasses took 27.4593ms
[debug]   Load.loadUnit(file:/C:/Documents/study/chisel-riscv/chisel-project/chisel-MultiPortMemory/, ...) took 6482.6426ms
[debug] Load.apply: load took 6488.0746ms
[debug] Load.apply: resolveProjects took 0.3934ms
[debug] Load.apply: finalTransforms took 40.1844ms
[debug] Load.apply: config.delegates took 0.3939ms
[debug] Load.apply: Def.make(settings)... took 82.5471ms
[debug] Load.apply: structureIndex took 26.1307ms
[debug] Load.apply: mkStreams took 0.1584ms
[info] set current project to chisel-MultiPortMemory (in build file:/C:/Documents/study/chisel-riscv/chisel-project/chisel-MultiPortMemory/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 12347 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 12347, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to chisel-MultiPortMemory (in build file:/C:/Documents/study/chisel-riscv/chisel-project/chisel-MultiPortMemory/)
[debug] > Exec(idea-shell, None, None)
